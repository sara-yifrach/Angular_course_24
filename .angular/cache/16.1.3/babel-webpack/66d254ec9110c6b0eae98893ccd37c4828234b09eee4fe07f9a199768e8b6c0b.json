{"ast":null,"code":"\"use strict\";\n\n// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n//  private _student:Student|null=null;\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n// public get student(): Student | null {\n//   return this._student;\n// }\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\The user\\Documents\\שרה מסמכים\\אנגולר קורס שנה ג\\תרגול ופרויקטים שלי\\my-app\\src\\app\\student-details-form-md\\student-details-form-md.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\n\n\n\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n\n//  private _student:Student|null=null;\n\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n\n\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n\n// public get student(): Student | null {\n//   return this._student;\n// }\n\n\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n\n// }\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}