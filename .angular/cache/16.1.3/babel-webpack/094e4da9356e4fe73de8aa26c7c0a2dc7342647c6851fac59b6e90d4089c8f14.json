{"ast":null,"code":"// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n//  private _student:Student|null=null;\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n// public get student(): Student | null {\n//   return this._student;\n// }\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n// }\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction StudentDetailsFormMDComponent_div_0_ng_container_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"this field is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentDetailsFormMDComponent_div_0_ng_container_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"this field must be at least 3 chars!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentDetailsFormMDComponent_div_0_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, StudentDetailsFormMDComponent_div_0_ng_container_7_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, StudentDetailsFormMDComponent_div_0_ng_container_7_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.studentForm.controls[\"name\"] == null ? null : ctx_r3.studentForm.controls[\"name\"].errors) && ctx_r3.studentForm.controls[\"name\"].errors && ctx_r3.studentForm.controls[\"name\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.studentForm.controls[\"name\"] == null ? null : ctx_r3.studentForm.controls[\"name\"].errors) && ctx_r3.studentForm.controls[\"name\"].errors && ctx_r3.studentForm.controls[\"name\"].errors[\"minlength\"]);\n  }\n}\nfunction StudentDetailsFormMDComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"form\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Student Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵtemplate(7, StudentDetailsFormMDComponent_div_0_ng_container_7_Template, 3, 2, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 9);\n    i0.ɵɵtext(10, \"Subject:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 11);\n    i0.ɵɵtext(14, \"User:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"select\")(16, \"option\", 12);\n    i0.ɵɵtext(17, \"user 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"option\", 13);\n    i0.ɵɵtext(19, \"user 2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 14);\n    i0.ɵɵtext(21, \"user 3\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function StudentDetailsFormMDComponent_div_0_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.saveNewStudent());\n    });\n    i0.ɵɵtext(23, \"Save\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.studentForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.studentForm && ctx_r0.studentForm.controls && (ctx_r0.studentForm.controls[\"name\"] == null ? null : ctx_r0.studentForm.controls[\"name\"].errors));\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.studentForm == null ? null : ctx_r0.studentForm.valid));\n  }\n}\nfunction StudentDetailsFormMDComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \" No Student To Dispaly. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class StudentDetailsFormMDComponent {\n  constructor() {\n    this._student = null;\n    this.onSaveStudent = new EventEmitter();\n    this.studentForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      description: new FormControl('', [Validators.required]),\n      userId: new FormControl(0, [Validators.required])\n    });\n  }\n  set student(value) {\n    this._student = value;\n    if (value) {\n      this.studentForm.patchValue(value); // מעדכן את ערכי הטופס אם יש ערכים בסטודנט\n    } else {\n      this.studentForm.reset(); // אם לא קיים סטודנט, מאפס את הטופס\n    }\n  }\n\n  get student() {\n    return this._student;\n  }\n  saveNewStudent() {\n    if (this.studentForm.valid) {\n      if (this._student) {\n        // עדכון הסטודנט עם הערכים החדשים מהטופס\n        const updatedStudent = {\n          ...this._student,\n          ...this.studentForm.value\n        };\n        this.onSaveStudent.emit(updatedStudent); // שולח את הסטודנט המעדכן לאמא\n      }\n    }\n  }\n}\n\nStudentDetailsFormMDComponent.ɵfac = function StudentDetailsFormMDComponent_Factory(t) {\n  return new (t || StudentDetailsFormMDComponent)();\n};\nStudentDetailsFormMDComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentDetailsFormMDComponent,\n  selectors: [[\"app-student-details-form-md\"]],\n  inputs: {\n    student: \"student\"\n  },\n  outputs: {\n    onSaveStudent: \"onSaveStudent\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[\"class\", \"card\", 4, \"ngIf\", \"ngIfElse\"], [\"noStudent\", \"\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"Userid\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n  template: function StudentDetailsFormMDComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, StudentDetailsFormMDComponent_div_0_Template, 24, 3, \"div\", 0);\n      i0.ɵɵtemplate(1, StudentDetailsFormMDComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.student)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","StudentDetailsFormMDComponent_div_0_ng_container_7_div_1_Template","StudentDetailsFormMDComponent_div_0_ng_container_7_div_2_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r3","studentForm","controls","errors","ɵɵelement","StudentDetailsFormMDComponent_div_0_ng_container_7_Template","ɵɵlistener","StudentDetailsFormMDComponent_div_0_Template_button_click_22_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","saveNewStudent","ctx_r0","valid","StudentDetailsFormMDComponent","constructor","_student","onSaveStudent","name","required","minLength","description","userId","student","value","patchValue","reset","updatedStudent","emit","selectors","inputs","outputs","decls","vars","consts","template","StudentDetailsFormMDComponent_Template","rf","ctx","StudentDetailsFormMDComponent_div_0_Template","StudentDetailsFormMDComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","_r1"],"sources":["C:\\Users\\The user\\Documents\\שרה מסמכים\\אנגולר קורס שנה ג\\תרגול ופרויקטים שלי\\my-app\\src\\app\\student-details-form-md\\student-details-form-md.component.ts","C:\\Users\\The user\\Documents\\שרה מסמכים\\אנגולר קורס שנה ג\\תרגול ופרויקטים שלי\\my-app\\src\\app\\student-details-form-md\\student-details-form-md.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\n\n\n\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n\n//  private _student:Student|null=null;\n\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n\n\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n\n// public get student(): Student | null {\n//   return this._student;\n// }\n\n\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n\n// }\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Student } from '../student.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-student-details-form-md',\n  templateUrl: './student-details-form-md.component.html',\n  styleUrls: ['./student-details-form-md.component.scss']\n})\nexport class StudentDetailsFormMDComponent {\n\n  private _student: Student | null = null;\n\n  @Input()\n  public set student(value: Student | null) {\n    this._student = value;\n    if (value) {\n      this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס אם יש ערכים בסטודנט\n    } else {\n      this.studentForm.reset();  // אם לא קיים סטודנט, מאפס את הטופס\n    }\n  }\n\n  public get student(): Student | null {\n    return this._student;\n  }\n\n  @Output() onSaveStudent: EventEmitter<Student> = new EventEmitter();\n\n  studentForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    description: new FormControl('', [Validators.required]),\n    userId:new FormControl(0,[Validators.required])\n  });\n\n  saveNewStudent() {\n    if (this.studentForm.valid) {\n      if (this._student) {\n        // עדכון הסטודנט עם הערכים החדשים מהטופס\n        const updatedStudent = { ...this._student, ...this.studentForm.value };\n        this.onSaveStudent.emit(updatedStudent);  // שולח את הסטודנט המעדכן לאמא\n      }\n    }\n  }\n\n}\n","<div class=\"card\" *ngIf=\"student else noStudent\">\n    <div class=\"card-body\">\n        <form [formGroup]=\"studentForm\">\n            <div class=\"form-group\">\n                <label for=\"name\">Student Name:</label>\n                <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n                <ng-container *ngIf=\"studentForm && studentForm.controls && studentForm.controls['name']?.errors\">\n                <!-- <ng-container *ngIf=\"studentForm.controls['name'].errors\"> -->\n                    <div class=\"alert alert-danger\" *ngIf=\"studentForm.controls['name']?.errors && studentForm.controls['name'].errors\n                    &&studentForm.controls['name'].errors['required']\">this field is required!</div>\n                    <div class=\"alert alert-danger\" *ngIf=\"studentForm.controls['name']?.errors && studentForm.controls['name'].errors\n                    &&studentForm.controls['name'].errors['minlength']\">this field must be at least 3 chars!</div>\n                </ng-container>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Subject:</label>\n                <input type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Userid\">User:</label>\n                <select>\n                    <option value=\"1\">user 1</option>\n                    <option value=\"2\">user 2</option>\n                    <option value=\"3\">user 3</option>\n\n                </select>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveNewStudent()\" [disabled]=\"!studentForm?.valid\">Save</button>\n\n            <!-- Student Details\n        <br>\n        {{student.name}}\n        {{student.subject}} -->\n        </form>\n\n    </div>\n</div>\n<ng-template #noStudent>\n    <div class=\"card\">\n        No Student To Dispaly.\n    </div>\n</ng-template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}