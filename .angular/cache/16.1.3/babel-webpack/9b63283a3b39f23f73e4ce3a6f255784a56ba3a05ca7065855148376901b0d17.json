{"ast":null,"code":"// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n//  private _student:Student|null=null;\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n// public get student(): Student | null {\n//   return this._student;\n// }\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n// }\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let StudentDetailsFormMDComponent = class StudentDetailsFormMDComponent {\n  constructor() {\n    this._student = null;\n    this.onSaveStudent = new EventEmitter();\n    this.studentForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  set student(value) {\n    this._student = value;\n    if (value) {\n      this.studentForm.patchValue(value); // מעדכן את ערכי הטופס אם יש ערכים בסטודנט\n    } else {\n      this.studentForm.reset(); // אם לא קיים סטודנט, מאפס את הטופס\n    }\n  }\n\n  get student() {\n    return this._student;\n  }\n  saveNewStudent() {\n    if (this.studentForm.valid) {\n      if (this._student) {\n        // עדכון הסטודנט עם הערכים החדשים מהטופס\n        const updatedStudent = {\n          ...this._student,\n          ...this.studentForm.value\n        };\n        this.onSaveStudent.emit(updatedStudent); // שולח את הסטודנט המעדכן לאמא\n      }\n    }\n  }\n};\n\n__decorate([Input()], StudentDetailsFormMDComponent.prototype, \"student\", null);\n__decorate([Output()], StudentDetailsFormMDComponent.prototype, \"onSaveStudent\", void 0);\nStudentDetailsFormMDComponent = __decorate([Component({\n  selector: 'app-student-details-form-md',\n  templateUrl: './student-details-form-md.component.html',\n  styleUrls: ['./student-details-form-md.component.scss']\n})], StudentDetailsFormMDComponent);","map":{"version":3,"names":["Component","Input","Output","EventEmitter","FormControl","FormGroup","Validators","StudentDetailsFormMDComponent","constructor","_student","onSaveStudent","studentForm","name","required","minLength","description","student","value","patchValue","reset","saveNewStudent","valid","updatedStudent","emit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\The user\\Documents\\שרה מסמכים\\אנגולר קורס שנה ג\\תרגול ופרויקטים שלי\\my-app\\src\\app\\student-details-form-md\\student-details-form-md.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import {  EventEmitter, Input, Output } from '@angular/core';\n// import { Student } from '../student.model';\n// import { FormControl, FormGroup, MinLengthValidator, Validators } from '@angular/forms';\n\n\n\n// @Component({\n//   selector: 'app-student-details-form-md',\n//   templateUrl: './student-details-form-md.component.html',\n//   styleUrls: ['./student-details-form-md.component.scss']\n// })\n// export class StudentDetailsFormMDComponent{\n\n//  private _student:Student|null=null;\n\n//   // public get student() :Student|null{\n//   //   return this._student;\n//   // }\n\n\n// @Input()\n// // public set student(value:Student){ \n// //   this._student = value;\n// //   this.studentForm = new FormGroup(\n// //     {\n// //       \"name\": new FormControl(\"\",[Validators.required, Validators.minLength(3)]),\n// //       \"description\":new FormControl(\"\",Validators.required)\n// //     }\n// //   );\n// //   // if (this.studentForm.value !== null) {\n// //   //   this._student = this.studentForm.value;\n// //   // } else {\n// //   //   // טיפול במקרה של null, למשל להגדיר ערך ברירת מחדל\n// //   //   this._student = { name: '',average: 0, subject:\"\"}; // דוגמה לאובייקט ברירת מחדל\n// //   // }\n// // }\n// // //student:Student|null=null;\n// public set student(value: Student | null) {\n//   this._student = value;\n//   // אם student לא null, אתחיל את הטופס מחדש\n//   if (value) {\n//     this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס בערכים של הסטודנט\n//   } else {\n//     this.studentForm.reset();  // אם student הוא null, מאפס את הטופס\n//   }\n// }\n\n// public get student(): Student | null {\n//   return this._student;\n// }\n\n\n// @Output()\n// onSaveStudent:EventEmitter<Student> = new EventEmitter()\n// // studentForm:FormGroup|null=null;\n\n// studentForm: FormGroup = new FormGroup({\n//   name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n//   description: new FormControl('', [Validators.required]),\n// });\n\n// saveNewStudent(){\n//   if (this.student) {\n//     // if(this.studentForm)\n//     // this.student = this.studentForm.value!;\n//     this.onSaveStudent.emit(this.student);\n//   }\n// }\n\n// }\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Student } from '../student.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-student-details-form-md',\n  templateUrl: './student-details-form-md.component.html',\n  styleUrls: ['./student-details-form-md.component.scss']\n})\nexport class StudentDetailsFormMDComponent {\n\n  private _student: Student | null = null;\n\n  @Input()\n  public set student(value: Student | null) {\n    this._student = value;\n    if (value) {\n      this.studentForm.patchValue(value);  // מעדכן את ערכי הטופס אם יש ערכים בסטודנט\n    } else {\n      this.studentForm.reset();  // אם לא קיים סטודנט, מאפס את הטופס\n    }\n  }\n\n  public get student(): Student | null {\n    return this._student;\n  }\n\n  @Output() onSaveStudent: EventEmitter<Student> = new EventEmitter();\n\n  studentForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    description: new FormControl('', [Validators.required]),\n  });\n\n  saveNewStudent() {\n    if (this.studentForm.valid) {\n      if (this._student) {\n        // עדכון הסטודנט עם הערכים החדשים מהטופס\n        const updatedStudent = { ...this._student, ...this.studentForm.value };\n        this.onSaveStudent.emit(updatedStudent);  // שולח את הסטודנט המעדכן לאמא\n      }\n    }\n  }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,SAAS,EAAUC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAE9E,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,6BAA6B,GAAnC,MAAMA,6BAA6B;EAAnCC,YAAA;IAEG,KAAAC,QAAQ,GAAmB,IAAI;IAgB7B,KAAAC,aAAa,GAA0B,IAAIP,YAAY,EAAE;IAEnE,KAAAQ,WAAW,GAAc,IAAIN,SAAS,CAAC;MACrCO,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC;KACvD,CAAC;EAYJ;EA9BE,IAAWG,OAAOA,CAACC,KAAqB;IACtC,IAAI,CAACR,QAAQ,GAAGQ,KAAK;IACrB,IAAIA,KAAK,EAAE;MACT,IAAI,CAACN,WAAW,CAACO,UAAU,CAACD,KAAK,CAAC,CAAC,CAAE;KACtC,MAAM;MACL,IAAI,CAACN,WAAW,CAACQ,KAAK,EAAE,CAAC,CAAE;;EAE/B;;EAEA,IAAWH,OAAOA,CAAA;IAChB,OAAO,IAAI,CAACP,QAAQ;EACtB;EASAW,cAAcA,CAAA;IACZ,IAAI,IAAI,CAACT,WAAW,CAACU,KAAK,EAAE;MAC1B,IAAI,IAAI,CAACZ,QAAQ,EAAE;QACjB;QACA,MAAMa,cAAc,GAAG;UAAE,GAAG,IAAI,CAACb,QAAQ;UAAE,GAAG,IAAI,CAACE,WAAW,CAACM;QAAK,CAAE;QACtE,IAAI,CAACP,aAAa,CAACa,IAAI,CAACD,cAAc,CAAC,CAAC,CAAE;;;EAGhD;CAED;;AA9BCE,UAAA,EADCvB,KAAK,EAAE,C,2DAQP;AAMSuB,UAAA,EAATtB,MAAM,EAAE,C,mEAA2D;AAlBzDK,6BAA6B,GAAAiB,UAAA,EALzCxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,6BAA6B;EACvCC,WAAW,EAAE,0CAA0C;EACvDC,SAAS,EAAE,CAAC,0CAA0C;CACvD,CAAC,C,EACWpB,6BAA6B,CAmCzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}